"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[628],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(n),f=a,d=c["".concat(p,".").concat(f)]||c[f]||m[f]||i;return n?r.createElement(d,o(o({ref:t},u),{},{components:n})):r.createElement(d,o({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},5303:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:2},o="Pipeline",l={unversionedId:"experimental/pipeline",id:"experimental/pipeline",title:"Pipeline",description:"Pipeline helps you to structure your Spark jobs with ease.",source:"@site/../docs/experimental/pipeline.md",sourceDirName:"experimental",slug:"/experimental/pipeline",permalink:"/zio-spark/experimental/pipeline",draft:!1,editUrl:"https://github.com/univalence/zio-spark/edit/master/docs/../docs/experimental/pipeline.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/zio-spark/experimental/overview"},next:{title:"Cancellable Effects",permalink:"/zio-spark/experimental/cancellable"}},p={},s=[],u={toc:s},c="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"pipeline"},"Pipeline"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Pipeline")," helps you to structure your Spark jobs with ease."),(0,a.kt)("p",null,"If you are building simple pipelines using Dataset, we can see a pipeline as:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"a function reading a Dataset using a SparkSession."),(0,a.kt)("li",{parentName:"ul"},"some transformations to obtain our output Dataset."),(0,a.kt)("li",{parentName:"ul"},"an action to output the result from the transformed Dataset.")),(0,a.kt)("p",null,"So to build a pipeline you will need to provide three functions describing the three steps above."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'import zio.spark.sql._\n\nval pipeline = Pipeline(\n    load      = SparkSession.read.inferSchema.withHeader.withDelimiter(";").csv("test.csv"),\n    transform = _.withColumn("new", $"old" + 1).limit(2),\n    action    = _.count()\n)\n')),(0,a.kt)("p",null,"It creates a description of our job, you can then transform it into a ZIO effect using ",(0,a.kt)("inlineCode",{parentName:"p"},"run"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"val job: SIO[Long] = pipeline.run\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"SIO[Long]")," is an alias for ",(0,a.kt)("inlineCode",{parentName:"p"},"ZIO[SparkSession, Throwable, Long]")," meaning that it returns an effect that need a\nSparkSession and will return a Long (the number of rows of the DataFrame)."))}m.isMDXComponent=!0}}]);